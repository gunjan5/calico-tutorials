# -*- mode: ruby -*-
# vi: set ft=ruby :

# The calicoctl download URL.
calicoctl_url = "https://github.com/projectcalico/calico-containers/releases/download/v1.0.0/calicoctl"

# The version of the calico docker images to install.  This is used to pre-load
# the calico/node image which slows down the install process, but speeds up the tutorial.
#
# This version should match the version required by calicoctl installed from
# calicoctl_url.
calico_node_ver = "v1.0.0"

# Size of the cluster created by Vagrant
num_instances=2

# Change basename of the VM
instance_name_prefix="node"

# The IP address of the first server
primary_ip = "10.96.0.101"

Vagrant.configure(2) do |config|
  # always use Vagrants insecure key
  config.ssh.insert_key = 'true'
  config.ssh.username = 'vagrant'

  # Use Bento Ubuntu 16.04 box (officially-recommended box by Vagrant)
  # https://www.vagrantup.com/boxes.html
  config.vm.box = "bento/ubuntu-16.04"

  # Workaround 16.04 issue with Virtualbox where Box waits 5 minutes to start 
  # if network "cable" is not connected: https://github.com/chef/bento/issues/682
  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    vb.cpus = 2
    vb.memory = 2048
  end

  # Set up each box
  (1..num_instances).each do |i|
    vm_name = "%s-%02d" % [instance_name_prefix, i]
    config.vm.define vm_name do |host|
      host.vm.hostname = vm_name

      ip = "10.96.0.#{i+100}"
      host.vm.network :private_network, ip: ip

      # Fix stdin: is not a tty error (http://foo-o-rama.com/vagrant--stdin-is-not-a-tty--fix.html)
      config.vm.provision "fix-no-tty", type: "shell" do |s|
        s.privileged = false
        s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
      end

      # The docker provisioner installs docker.
      host.vm.provision :docker, images: [
          "calico/node:#{calico_node_ver}",
          "calico/ctl:#{calico_node_ver}",
      ]

      # Add kubernetes apt GPG key, add package source and install kubelet, kubeadm, kubectl and k8s-CNI binaries.
      host.vm.provision :shell, inline: <<-SHELL
      curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
      echo deb http://apt.kubernetes.io/ kubernetes-xenial main >> /etc/apt/sources.list.d/kubernetes.list
      apt-get update
      apt-get install -y kubelet kubeadm kubectl kubernetes-cni
      SHELL

      # download calicoctl.
      host.vm.provision :shell, inline: "curl -L --silent #{calicoctl_url} -o /usr/local/bin/calicoctl"
      host.vm.provision :shell, inline: "chmod +x /usr/local/bin/calicoctl"
    end
  end
end